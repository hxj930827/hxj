<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1" metadata-complete="true">
	<!-- 不知道为什么，不能用logbackConfigLocation -->
	<!-- 都已经导入，没有问题。但是实际上还要把依赖都加进classpath下。步骤： 项目右击properties Deployment Assembly 
		add Java Build Path Entries 导入所有依赖的Jar包，重新start tomcat即可。 -->
	<!--context-param元素声明应用范围内的初始化参数 -->
	<context-param>
		<param-name>logbackConfigLocation</param-name>
		<param-value>classpath:logback.xml</param-value>
	</context-param>

	<listener>
		<listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
	</listener>
	<!-- 如果是用mvn命令生成的xml，需要修改servlet版本为3.1 -->
	<!--在向servlet或JSP页面制定初始化参数或定制URL时，必须首先命名servlet或JSP页面。 Servlet元素就是用来完成此项任务的 -->
	<servlet>
		<servlet-name>seckill-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 配置springMVC需要加载的配置文件 spring-dao.xml,spring-service.xml,spring-web.xml 
			Mybatis - > spring -> springmvc -->
		<init-param>
			<!-- 参数名 -->
			<param-name>contextConfigLocation</param-name>
			<!-- 参数值 -->
			<param-value>classpath:spring/spring-*.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>seckill-dispatcher</servlet-name>
		<!-- 默认匹配所有的请求 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!--字符编码拦截器 -->
	<!--过滤器元素将一个名字与一个实现javax.servlet.Filter接口的类相关联 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceRequestEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>forceResponseEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<!--拦截所有请求的fileter进行编码处理 -->
	<!--一旦命名了一个过滤器，就要利用filter-mapping元素把它与一个或多个servlet或JSP页面相关联 -->
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--配置了当系统发生404错误时，跳转到错误处理页面NotFound.jsp -->
	<error-page>
		<error-code>404</error-code>
		<location>/index.jsp</location>
	</error-page>
</web-app>
